<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FY86Gu0AAAAASUVORK5CYII=
</value>
  </data>
</root>