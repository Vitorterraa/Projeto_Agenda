<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>